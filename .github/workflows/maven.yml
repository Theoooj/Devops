name: Java CI with Maven

on:
  push:
    branches: [ "TestCI" ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: devops
        ports:
          - "3306:3306"
        options: --health-cmd="mysqladmin ping -h 127.0.0.1 -uroot -proot" --health-interval=10s --health-timeout=5s --health-retries=3
      
      selenium:
        image: selenium/standalone-chrome:latest
        ports:
          - "4444:4444"
        options: --shm-size=2g

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up JDK 21
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin' 
          cache: maven

      # Build Backend with Maven
      - name: Build Backend with Maven
        working-directory: backend
        run: mvn clean verify

      # Run tests
      - name: Run Backend Tests
        working-directory: backend
        run: mvn test

      # Install Angular
      - name: Install Angular
        run: npm install -g @angular/cli@latest

      # Install Frontend dependencies & run tests
      - name: Install dependencies & run tests
        working-directory: frontend
        run: |
          npm install
          ng test --browsers=ChromeHeadless --progress=false --watch=false --code-coverage --source-map=false

      # Vérifier que Selenium est prêt
      - name: Vérifier que Selenium est prêt
        run: |
          echo "Vérification de la disponibilité de Selenium..."
          for i in {1..12}; do
            if curl -s http://localhost:4444/wd/hub/status | grep -q "\"ready\": true"; then
              echo "Selenium est prêt!"
              break
            fi
            echo "Attente de Selenium... ($i/12)"
            sleep 5
          done
          curl -s http://localhost:4444/wd/hub/status || echo "Impossible de connecter à Selenium"

      # Build and start the frontend
      - name: Build and start frontend
        working-directory: frontend
        run: |
          ng build
          nohup ng serve --host 0.0.0.0 --port 4200 &
          echo "Attente du démarrage du frontend..."
          for i in {1..12}; do
            if curl -s http://localhost:4200 > /dev/null; then
              echo "Frontend est prêt!"
              break
            fi
            echo "Attente du frontend... ($i/12)"
            sleep 5
          done

      # Install Python and Selenium
      - name: Install Python and Selenium
        run: |
          python -m pip install --upgrade pip
          pip install selenium pytest

      # Debug des services
      - name: Debug des services
        run: |
          echo "== Vérification des ports ouverts =="
          netstat -tuln
          echo "== Vérification des processus en cours =="
          ps aux | grep selenium
          ps aux | grep angular
          echo "== Vérification du service Selenium =="
          curl -v http://localhost:4444/wd/hub/status || echo "Selenium n'est pas accessible"
          echo "== Vérification du frontend =="
          curl -v http://localhost:4200 || echo "Frontend n'est pas accessible"

      # Run Selenium tests
      - name: Run Selenium tests
        working-directory: tests
        env:
          FRONTEND_URL: "http://localhost:4200"
          SELENIUM_URL: "http://localhost:4444/wd/hub"
        run: python StartTest.py

      # Docker login
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:         
          username: "${{ secrets.DOCKERHUB_USERNAME }}"
          password: "${{ secrets.DOCKERHUB_PASSWORD }}"

      # Build Docker images
      - name: Build Docker images
        run: |
          docker build -t acouderc1/front -f frontend/Dockerfile frontend
          docker build -t acouderc1/back -f backend/Dockerfile backend

      # Push images to Docker Hub
      - name: Push Docker images
        run: |
          docker push acouderc1/front
          docker push acouderc1/back